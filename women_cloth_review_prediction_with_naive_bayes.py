# -*- coding: utf-8 -*-
"""Women Cloth Review Prediction With Naive Bayes

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oh_zxKIGqY9OL1rZHkAim9nxJMiyGo6o

Women Cloth Review Prediction With Naive Bayes

DataSet : Womens Clothing E-Commerce Reviews.csv from kaagle.com (https://www.kaggle.com/datasets/yasserhessein/womens-clothing-ecommerce-reviews)

Import Library
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""Import Data"""

df=pd.read_csv("Womens Clothing E-Commerce Reviews.csv")
df.head()

df.info()

df.shape

df.isna().sum()

df['Review Text']

df.columns

x=df['Review Text']
y=df['Rating']

df['Rating'].value_counts()

"""Train Test Split"""

Rating=df['Rating']
from sklearn.model_selection import train_test_split
X_train , X_test , y_train , y_test = train_test_split(x,y, test_size = 0.7,stratify = y, random_state = 2529)

X_train.shape

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(lowercase=True,analyzer='word',ngram_range=(2,3),stop_words='english',max_features=5000)
X_train=cv.fit_transform(X_train.values.astype('U'))
cv.get_feature_names_out()
X_train.toarray()

X_test=cv.fit_transform(X_test.values.astype('U'))
cv.get_feature_names_out()
X_test.toarray()

"""Model"""

from sklearn.naive_bayes import MultinomialNB
model=MultinomialNB()
model.fit(X_train,y_train)

y_pred=model.predict(X_test)
y_pred.shape

model.predict_proba(X_test)

"""Evaluation"""

from sklearn.metrics import confusion_matrix,classification_report
print(confusion_matrix(y_test,y_pred))
#print(classification_report(y_test,y_pred))

from sklearn.metrics import accuracy_score;
from sklearn import metrics
print("Gaussian Naive Bayes model accuracy(in %):",(metrics.accuracy_score(y_test,y_pred )*100).round(2))

"""ReTrain"""

df['Rating'].value_counts()

df.replace({'Rating':{1:0,2:0,3:0,4:1,5:1}},inplace=True)

y=df['Rating']
x=df['Review Text']

from sklearn.model_selection import train_test_split
X_train , X_test , y_train , y_test = train_test_split(x,y, test_size = 0.7,stratify = y, random_state = 2529)

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(lowercase=True,analyzer='word',ngram_range=(2,3),stop_words='english',max_features=5000)
X_train=cv.fit_transform(X_train.values.astype('U'))
X_test=cv.fit_transform(X_test.values.astype('U'))

model=MultinomialNB()
model.fit(X_train,y_train)

y_pred=model.predict(X_test)

y_pred.shape

y_pred

"""Improved Model Evalauation"""

from sklearn.metrics import accuracy_score;
from sklearn import metrics
print("Gaussian Naive Bayes model accuracy(in %):",(metrics.accuracy_score(y_test,y_pred )*100).round(2))